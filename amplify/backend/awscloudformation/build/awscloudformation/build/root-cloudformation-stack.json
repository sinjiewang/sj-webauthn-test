{
  "Description": "Root Stack for AWS Amplify CLI",
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters": {
    "DeploymentBucketName": {
      "Type": "String",
      "Default": "DeploymentBucket",
      "Description": "Name of the common deployment bucket provided by the parent stack"
    },
    "AuthRoleName": {
      "Type": "String",
      "Default": "AuthRoleName",
      "Description": "Name of the common deployment bucket provided by the parent stack"
    },
    "UnauthRoleName": {
      "Type": "String",
      "Default": "UnAuthRoleName",
      "Description": "Name of the common deployment bucket provided by the parent stack"
    }
  },
  "Outputs": {
    "Region": {
      "Description": "CloudFormation provider root stack Region",
      "Value": {
        "Ref": "AWS::Region"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-Region"
        }
      }
    },
    "StackName": {
      "Description": "CloudFormation provider root stack ID",
      "Value": {
        "Ref": "AWS::StackName"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-StackName"
        }
      }
    },
    "StackId": {
      "Description": "CloudFormation provider root stack name",
      "Value": {
        "Ref": "AWS::StackId"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-StackId"
        }
      }
    },
    "AuthRoleArn": {
      "Value": {
        "Fn::GetAtt": [
          "AuthRole",
          "Arn"
        ]
      }
    },
    "UnauthRoleArn": {
      "Value": {
        "Fn::GetAtt": [
          "UnauthRole",
          "Arn"
        ]
      }
    },
    "DeploymentBucketName": {
      "Description": "CloudFormation provider root stack deployment bucket name",
      "Value": {
        "Ref": "DeploymentBucketName"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-DeploymentBucketName"
        }
      }
    },
    "AuthRoleName": {
      "Value": {
        "Ref": "AuthRole"
      }
    },
    "UnauthRoleName": {
      "Value": {
        "Ref": "UnauthRole"
      }
    }
  },
  "Resources": {
    "DeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": {
          "Ref": "DeploymentBucketName"
        },
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "AuthRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Deny",
              "Principal": {
                "Federated": "cognito-identity.amazonaws.com"
              },
              "Action": "sts:AssumeRoleWithWebIdentity"
            }
          ]
        },
        "RoleName": {
          "Ref": "AuthRoleName"
        }
      }
    },
    "UnauthRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Deny",
              "Principal": {
                "Federated": "cognito-identity.amazonaws.com"
              },
              "Action": "sts:AssumeRoleWithWebIdentity"
            }
          ]
        },
        "RoleName": {
          "Ref": "UnauthRoleName"
        }
      }
    },
    "AuthTriggerCustomLambdaStack": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": "https://s3.amazonaws.com/amplify-sjwebauthntest-dev-32044-deployment/amplify-cfn-templates/auth/auth-trigger-cloudformation-template.json",
        "Parameters": {
          "env": "dev",
          "userpoolId": {
            "Fn::GetAtt": [
              "authsjwebauthntest483c852a",
              "Outputs.UserPoolId"
            ]
          },
          "userpoolArn": {
            "Fn::GetAtt": [
              "authsjwebauthntest483c852a",
              "Outputs.UserPoolArn"
            ]
          },
          "functionsjwebauthntest483c852aDefineAuthChallengeLambdaExecutionRole": {
            "Fn::GetAtt": [
              "functionsjwebauthntest483c852aDefineAuthChallenge",
              "Outputs.LambdaExecutionRoleArn"
            ]
          },
          "functionsjwebauthntest483c852aDefineAuthChallengeArn": {
            "Fn::GetAtt": [
              "functionsjwebauthntest483c852aDefineAuthChallenge",
              "Outputs.Arn"
            ]
          },
          "functionsjwebauthntest483c852aDefineAuthChallengeName": {
            "Fn::GetAtt": [
              "functionsjwebauthntest483c852aDefineAuthChallenge",
              "Outputs.Name"
            ]
          },
          "functionsjwebauthntest483c852aCreateAuthChallengeLambdaExecutionRole": {
            "Fn::GetAtt": [
              "functionsjwebauthntest483c852aCreateAuthChallenge",
              "Outputs.LambdaExecutionRoleArn"
            ]
          },
          "functionsjwebauthntest483c852aCreateAuthChallengeArn": {
            "Fn::GetAtt": [
              "functionsjwebauthntest483c852aCreateAuthChallenge",
              "Outputs.Arn"
            ]
          },
          "functionsjwebauthntest483c852aCreateAuthChallengeName": {
            "Fn::GetAtt": [
              "functionsjwebauthntest483c852aCreateAuthChallenge",
              "Outputs.Name"
            ]
          },
          "functionsjwebauthntest483c852aVerifyAuthChallengeResponseLambdaExecutionRole": {
            "Fn::GetAtt": [
              "functionsjwebauthntest483c852aVerifyAuthChallengeResponse",
              "Outputs.LambdaExecutionRoleArn"
            ]
          },
          "functionsjwebauthntest483c852aVerifyAuthChallengeResponseArn": {
            "Fn::GetAtt": [
              "functionsjwebauthntest483c852aVerifyAuthChallengeResponse",
              "Outputs.Arn"
            ]
          },
          "functionsjwebauthntest483c852aVerifyAuthChallengeResponseName": {
            "Fn::GetAtt": [
              "functionsjwebauthntest483c852aVerifyAuthChallengeResponse",
              "Outputs.Name"
            ]
          }
        }
      },
      "DependsOn": [
        "authsjwebauthntest483c852a",
        "functionsjwebauthntest483c852aDefineAuthChallenge",
        "functionsjwebauthntest483c852aCreateAuthChallenge",
        "functionsjwebauthntest483c852aVerifyAuthChallengeResponse"
      ]
    },
    "functionsjwebauthntest483c852aDefineAuthChallenge": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": "https://s3.amazonaws.com/amplify-sjwebauthntest-dev-32044-deployment/amplify-cfn-templates/function/sjwebauthntest483c852aDefineAuthChallenge-cloudformation-template.json",
        "Parameters": {
          "modules": "boilerplate-define-challenge",
          "resourceName": "sjwebauthntest483c852aDefineAuthChallenge",
          "deploymentBucketName": "amplify-sjwebauthntest-dev-32044-deployment",
          "s3Key": "amplify-builds/sjwebauthntest483c852aDefineAuthChallenge-3672724a69692b434849-build.zip",
          "env": "dev"
        }
      }
    },
    "functionsjwebauthntest483c852aCreateAuthChallenge": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": "https://s3.amazonaws.com/amplify-sjwebauthntest-dev-32044-deployment/amplify-cfn-templates/function/sjwebauthntest483c852aCreateAuthChallenge-cloudformation-template.json",
        "Parameters": {
          "modules": "boilerplate-create-challenge",
          "resourceName": "sjwebauthntest483c852aCreateAuthChallenge",
          "deploymentBucketName": "amplify-sjwebauthntest-dev-32044-deployment",
          "s3Key": "amplify-builds/sjwebauthntest483c852aCreateAuthChallenge-356d62726b672f4f2f57-build.zip",
          "functionsjwebauthntestlayerDDBActionsArn": {
            "Fn::GetAtt": [
              "functionsjwebauthntestlayerDDBActions",
              "Outputs.Arn"
            ]
          },
          "apisjwebauthntestGraphQLAPIIdOutput": {
            "Fn::GetAtt": [
              "apisjwebauthntest",
              "Outputs.GraphQLAPIIdOutput"
            ]
          },
          "apisjwebauthntestGraphQLAPIEndpointOutput": {
            "Fn::GetAtt": [
              "apisjwebauthntest",
              "Outputs.GraphQLAPIEndpointOutput"
            ]
          },
          "apisjwebauthntestGraphQLAPIKeyOutput": {
            "Fn::GetAtt": [
              "apisjwebauthntest",
              "Outputs.GraphQLAPIKeyOutput"
            ]
          },
          "env": "dev"
        }
      }
    },
    "functionsjwebauthntest483c852aVerifyAuthChallengeResponse": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": "https://s3.amazonaws.com/amplify-sjwebauthntest-dev-32044-deployment/amplify-cfn-templates/function/sjwebauthntest483c852aVerifyAuthChallengeResponse-cloudformation-template.json",
        "Parameters": {
          "modules": "boilerplate-verify",
          "resourceName": "sjwebauthntest483c852aVerifyAuthChallengeResponse",
          "deploymentBucketName": "amplify-sjwebauthntest-dev-32044-deployment",
          "s3Key": "amplify-builds/sjwebauthntest483c852aVerifyAuthChallengeResponse-4a67363655676a397864-build.zip",
          "functionsjwebauthntestlayerWebauthnArn": {
            "Fn::GetAtt": [
              "functionsjwebauthntestlayerWebauthn",
              "Outputs.Arn"
            ]
          },
          "env": "dev"
        }
      }
    },
    "functionsjwebauthntestlayerCognitoActions": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": "https://s3.amazonaws.com/amplify-sjwebauthntest-dev-32044-deployment/amplify-cfn-templates/function/sjwebauthntestlayerCognitoActions-awscloudformation-template.json",
        "Parameters": {
          "runtimes": "nodejs18.x",
          "description": "Updated layer version 2023-07-27T03:44:51.565Z",
          "deploymentBucketName": "amplify-sjwebauthntest-dev-32044-deployment",
          "s3Key": "amplify-builds/sjwebauthntestlayerCognitoActions-LambdaLayerVersion7fcbf25a-build.zip",
          "env": "dev"
        }
      }
    },
    "functionsjwebauthntestlayerDDBActions": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": "https://s3.amazonaws.com/amplify-sjwebauthntest-dev-32044-deployment/amplify-cfn-templates/function/sjwebauthntestlayerDDBActions-awscloudformation-template.json",
        "Parameters": {
          "runtimes": "nodejs18.x",
          "description": "Updated layer version 2023-07-27T03:44:51.565Z",
          "deploymentBucketName": "amplify-sjwebauthntest-dev-32044-deployment",
          "s3Key": "amplify-builds/sjwebauthntestlayerDDBActions-LambdaLayerVersion64393527-build.zip",
          "env": "dev"
        }
      }
    },
    "functionsjwebauthntestlayerWebauthn": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": "https://s3.amazonaws.com/amplify-sjwebauthntest-dev-32044-deployment/amplify-cfn-templates/function/sjwebauthntestlayerWebauthn-awscloudformation-template.json",
        "Parameters": {
          "runtimes": "nodejs18.x",
          "description": "Updated layer version 2023-07-27T03:44:51.565Z",
          "deploymentBucketName": "amplify-sjwebauthntest-dev-32044-deployment",
          "s3Key": "amplify-builds/sjwebauthntestlayerWebauthn-LambdaLayerVersion6903a35a-build.zip",
          "env": "dev"
        }
      }
    },
    "functionsjwebauthntestregister": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": "https://s3.amazonaws.com/amplify-sjwebauthntest-dev-32044-deployment/amplify-cfn-templates/function/sjwebauthntestregister-cloudformation-template.json",
        "Parameters": {
          "deploymentBucketName": "amplify-sjwebauthntest-dev-32044-deployment",
          "s3Key": "amplify-builds/sjwebauthntestregister-3736674a76306c384f75-build.zip",
          "functionsjwebauthntestlayerCognitoActionsArn": {
            "Fn::GetAtt": [
              "functionsjwebauthntestlayerCognitoActions",
              "Outputs.Arn"
            ]
          },
          "functionsjwebauthntestlayerDDBActionsArn": {
            "Fn::GetAtt": [
              "functionsjwebauthntestlayerDDBActions",
              "Outputs.Arn"
            ]
          },
          "authsjwebauthntest483c852aUserPoolId": {
            "Fn::GetAtt": [
              "authsjwebauthntest483c852a",
              "Outputs.UserPoolId"
            ]
          },
          "apisjwebauthntestGraphQLAPIIdOutput": {
            "Fn::GetAtt": [
              "apisjwebauthntest",
              "Outputs.GraphQLAPIIdOutput"
            ]
          },
          "apisjwebauthntestGraphQLAPIEndpointOutput": {
            "Fn::GetAtt": [
              "apisjwebauthntest",
              "Outputs.GraphQLAPIEndpointOutput"
            ]
          },
          "apisjwebauthntestGraphQLAPIKeyOutput": {
            "Fn::GetAtt": [
              "apisjwebauthntest",
              "Outputs.GraphQLAPIKeyOutput"
            ]
          },
          "env": "dev"
        }
      }
    },
    "functionsjwebauthntestregisterresponse": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": "https://s3.amazonaws.com/amplify-sjwebauthntest-dev-32044-deployment/amplify-cfn-templates/function/sjwebauthntestregisterresponse-cloudformation-template.json",
        "Parameters": {
          "deploymentBucketName": "amplify-sjwebauthntest-dev-32044-deployment",
          "s3Key": "amplify-builds/sjwebauthntestregisterresponse-716e3466627832695879-build.zip",
          "functionsjwebauthntestlayerCognitoActionsArn": {
            "Fn::GetAtt": [
              "functionsjwebauthntestlayerCognitoActions",
              "Outputs.Arn"
            ]
          },
          "functionsjwebauthntestlayerDDBActionsArn": {
            "Fn::GetAtt": [
              "functionsjwebauthntestlayerDDBActions",
              "Outputs.Arn"
            ]
          },
          "functionsjwebauthntestlayerWebauthnArn": {
            "Fn::GetAtt": [
              "functionsjwebauthntestlayerWebauthn",
              "Outputs.Arn"
            ]
          },
          "authsjwebauthntest483c852aUserPoolId": {
            "Fn::GetAtt": [
              "authsjwebauthntest483c852a",
              "Outputs.UserPoolId"
            ]
          },
          "apisjwebauthntestGraphQLAPIIdOutput": {
            "Fn::GetAtt": [
              "apisjwebauthntest",
              "Outputs.GraphQLAPIIdOutput"
            ]
          },
          "apisjwebauthntestGraphQLAPIEndpointOutput": {
            "Fn::GetAtt": [
              "apisjwebauthntest",
              "Outputs.GraphQLAPIEndpointOutput"
            ]
          },
          "apisjwebauthntestGraphQLAPIKeyOutput": {
            "Fn::GetAtt": [
              "apisjwebauthntest",
              "Outputs.GraphQLAPIKeyOutput"
            ]
          },
          "env": "dev"
        }
      }
    },
    "functionsjwebauthntestprelogin": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": "https://s3.amazonaws.com/amplify-sjwebauthntest-dev-32044-deployment/amplify-cfn-templates/function/sjwebauthntestprelogin-cloudformation-template.json",
        "Parameters": {
          "deploymentBucketName": "amplify-sjwebauthntest-dev-32044-deployment",
          "s3Key": "amplify-builds/sjwebauthntestprelogin-727858783273556f6769-build.zip",
          "authsjwebauthntest483c852aUserPoolId": {
            "Fn::GetAtt": [
              "authsjwebauthntest483c852a",
              "Outputs.UserPoolId"
            ]
          },
          "apisjwebauthntestGraphQLAPIIdOutput": {
            "Fn::GetAtt": [
              "apisjwebauthntest",
              "Outputs.GraphQLAPIIdOutput"
            ]
          },
          "apisjwebauthntestGraphQLAPIEndpointOutput": {
            "Fn::GetAtt": [
              "apisjwebauthntest",
              "Outputs.GraphQLAPIEndpointOutput"
            ]
          },
          "apisjwebauthntestGraphQLAPIKeyOutput": {
            "Fn::GetAtt": [
              "apisjwebauthntest",
              "Outputs.GraphQLAPIKeyOutput"
            ]
          },
          "functionsjwebauthntestlayerCognitoActionsArn": {
            "Fn::GetAtt": [
              "functionsjwebauthntestlayerCognitoActions",
              "Outputs.Arn"
            ]
          },
          "functionsjwebauthntestlayerDDBActionsArn": {
            "Fn::GetAtt": [
              "functionsjwebauthntestlayerDDBActions",
              "Outputs.Arn"
            ]
          },
          "env": "dev"
        }
      }
    },
    "functionsjwebauthntestverify": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": "https://s3.amazonaws.com/amplify-sjwebauthntest-dev-32044-deployment/amplify-cfn-templates/function/sjwebauthntestverify-cloudformation-template.json",
        "Parameters": {
          "deploymentBucketName": "amplify-sjwebauthntest-dev-32044-deployment",
          "s3Key": "amplify-builds/sjwebauthntestverify-6c6a6549426373576654-build.zip",
          "functionsjwebauthntestlayerCognitoActionsArn": {
            "Fn::GetAtt": [
              "functionsjwebauthntestlayerCognitoActions",
              "Outputs.Arn"
            ]
          },
          "functionsjwebauthntestlayerDDBActionsArn": {
            "Fn::GetAtt": [
              "functionsjwebauthntestlayerDDBActions",
              "Outputs.Arn"
            ]
          },
          "functionsjwebauthntestlayerWebauthnArn": {
            "Fn::GetAtt": [
              "functionsjwebauthntestlayerWebauthn",
              "Outputs.Arn"
            ]
          },
          "authsjwebauthntest483c852aUserPoolId": {
            "Fn::GetAtt": [
              "authsjwebauthntest483c852a",
              "Outputs.UserPoolId"
            ]
          },
          "apisjwebauthntestGraphQLAPIIdOutput": {
            "Fn::GetAtt": [
              "apisjwebauthntest",
              "Outputs.GraphQLAPIIdOutput"
            ]
          },
          "apisjwebauthntestGraphQLAPIEndpointOutput": {
            "Fn::GetAtt": [
              "apisjwebauthntest",
              "Outputs.GraphQLAPIEndpointOutput"
            ]
          },
          "apisjwebauthntestGraphQLAPIKeyOutput": {
            "Fn::GetAtt": [
              "apisjwebauthntest",
              "Outputs.GraphQLAPIKeyOutput"
            ]
          },
          "env": "dev"
        }
      }
    },
    "authsjwebauthntest483c852a": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": "https://s3.amazonaws.com/amplify-sjwebauthntest-dev-32044-deployment/amplify-cfn-templates/auth/sjwebauthntest483c852a-cloudformation-template.json",
        "Parameters": {
          "identityPoolName": "sjwebauthntest483c852a_identitypool_483c852a",
          "allowUnauthenticatedIdentities": false,
          "resourceNameTruncated": "sjweba483c852a",
          "userPoolName": "sjwebauthntest483c852a_userpool_483c852a",
          "autoVerifiedAttributes": "email",
          "mfaConfiguration": "OFF",
          "mfaTypes": "SMS Text Message",
          "smsAuthenticationMessage": "Your authentication code is {####}",
          "smsVerificationMessage": "Your verification code is {####}",
          "emailVerificationSubject": "Your verification code",
          "emailVerificationMessage": "Your verification code is {####}",
          "defaultPasswordPolicy": false,
          "passwordPolicyMinLength": 8,
          "passwordPolicyCharacters": "",
          "requiredAttributes": "email",
          "aliasAttributes": "",
          "userpoolClientGenerateSecret": false,
          "userpoolClientRefreshTokenValidity": 30,
          "userpoolClientWriteAttributes": "email",
          "userpoolClientReadAttributes": "email",
          "userpoolClientLambdaRole": "sjweba483c852a_userpoolclient_lambda_role",
          "userpoolClientSetAttributes": false,
          "sharedId": "483c852a",
          "resourceName": "sjwebauthntest483c852a",
          "authSelections": "identityPoolAndUserPool",
          "useDefault": "default",
          "usernameAttributes": "email",
          "triggers": "{\"DefineAuthChallenge\":[\"boilerplate-define-challenge\"],\"CreateAuthChallenge\":[\"boilerplate-create-challenge\"],\"VerifyAuthChallengeResponse\":[\"boilerplate-verify\"]}",
          "userPoolGroupList": "",
          "serviceName": "Cognito",
          "usernameCaseSensitive": false,
          "useEnabledMfas": true,
          "authRoleArn": {
            "Fn::GetAtt": [
              "AuthRole",
              "Arn"
            ]
          },
          "unauthRoleArn": {
            "Fn::GetAtt": [
              "UnauthRole",
              "Arn"
            ]
          },
          "breakCircularDependency": true,
          "dependsOn": "[object Object],[object Object],[object Object]",
          "permissions": "",
          "authTriggerConnections": "{\"triggerType\":\"DefineAuthChallenge\",\"lambdaFunctionName\":\"sjwebauthntest483c852aDefineAuthChallenge\"},{\"triggerType\":\"CreateAuthChallenge\",\"lambdaFunctionName\":\"sjwebauthntest483c852aCreateAuthChallenge\"},{\"triggerType\":\"VerifyAuthChallengeResponse\",\"lambdaFunctionName\":\"sjwebauthntest483c852aVerifyAuthChallengeResponse\"}",
          "env": "dev"
        }
      }
    },
    "apisjwebauthntest": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": "https://s3.amazonaws.com/amplify-sjwebauthntest-dev-32044-deployment/amplify-cfn-templates/api/cloudformation-template.json",
        "Parameters": {
          "AppSyncApiName": "sjwebauthntest",
          "DynamoDBBillingMode": "PAY_PER_REQUEST",
          "DynamoDBEnableServerSideEncryption": false,
          "AuthCognitoUserPoolId": {
            "Fn::GetAtt": [
              "authsjwebauthntest483c852a",
              "Outputs.UserPoolId"
            ]
          },
          "S3DeploymentBucket": "amplify-sjwebauthntest-dev-32044-deployment",
          "S3DeploymentRootKey": "amplify-appsync-files/dc378d61db5a3240057aa8f09378c13f15ebb6f9",
          "env": "dev"
        }
      }
    },
    "hostingS3AndCloudFront": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": "https://s3.amazonaws.com/amplify-sjwebauthntest-dev-32044-deployment/amplify-cfn-templates/hosting/template.json",
        "Parameters": {
          "bucketName": "sjwebauthntest-20230727054340-hostingbucket",
          "env": "dev"
        }
      }
    },
    "UpdateRolesWithIDPFunction": {
      "DependsOn": [
        "AuthRole",
        "UnauthRole",
        "authsjwebauthntest483c852a"
      ],
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": {
            "Fn::Join": [
              "\n",
              [
                "const response = require('cfn-response');",
                "const { IAMClient, GetRoleCommand, UpdateAssumeRolePolicyCommand } = require('@aws-sdk/client-iam');",
                "exports.handler = function(event, context) {",
                "    // Don't return promise, response.send() marks context as done internally",
                "    const ignoredPromise = handleEvent(event, context)",
                "};",
                "async function handleEvent(event, context) {",
                "    try {",
                "        let authRoleName = event.ResourceProperties.authRoleName;",
                "        let unauthRoleName = event.ResourceProperties.unauthRoleName;",
                "        let idpId = event.ResourceProperties.idpId;",
                "        let authParamsJson = {",
                "            'Version': '2012-10-17',",
                "            'Statement': [{",
                "                'Effect': 'Allow',",
                "                'Principal': {'Federated': 'cognito-identity.amazonaws.com'},",
                "                'Action': 'sts:AssumeRoleWithWebIdentity',",
                "                'Condition': {",
                "                    'StringEquals': {'cognito-identity.amazonaws.com:aud': idpId},",
                "                    'ForAnyValue:StringLike': {'cognito-identity.amazonaws.com:amr': 'authenticated'}",
                "                }",
                "            }]",
                "        };",
                "        let unauthParamsJson = {",
                "            'Version': '2012-10-17',",
                "            'Statement': [{",
                "                'Effect': 'Allow',",
                "                'Principal': {'Federated': 'cognito-identity.amazonaws.com'},",
                "                'Action': 'sts:AssumeRoleWithWebIdentity',",
                "                'Condition': {",
                "                    'StringEquals': {'cognito-identity.amazonaws.com:aud': idpId},",
                "                    'ForAnyValue:StringLike': {'cognito-identity.amazonaws.com:amr': 'unauthenticated'}",
                "                }",
                "            }]",
                "        };",
                "        if (event.RequestType === 'Delete') {",
                "            try {",
                "                delete authParamsJson.Statement[0].Condition;",
                "                delete unauthParamsJson.Statement[0].Condition;",
                "                let authParams = {PolicyDocument: JSON.stringify(authParamsJson), RoleName: authRoleName};",
                "                let unauthParams = {PolicyDocument: JSON.stringify(unauthParamsJson), RoleName: unauthRoleName};",
                "                const iam = new IAMClient({region: event.ResourceProperties.region});",
                "                let res = await Promise.all([",
                "                    iam.send(new GetRoleCommand({RoleName: authParams.RoleName})),",
                "                    iam.send(new GetRoleCommand({RoleName: unauthParams.RoleName}))",
                "                ]);",
                "                res = await Promise.all([",
                "                    iam.send(new UpdateAssumeRolePolicyCommand(authParams)),",
                "                    iam.send(new UpdateAssumeRolePolicyCommand(unauthParams))",
                "                ]);",
                "                response.send(event, context, response.SUCCESS, {});",
                "            } catch (err) {",
                "                console.log(err.stack);",
                "                response.send(event, context, response.SUCCESS, {Error: err});",
                "            }",
                "        } else if (event.RequestType === 'Update' || event.RequestType === 'Create') {",
                "            const iam = new IAMClient({region: event.ResourceProperties.region});",
                "            let authParams = {PolicyDocument: JSON.stringify(authParamsJson), RoleName: authRoleName};",
                "            let unauthParams = {PolicyDocument: JSON.stringify(unauthParamsJson), RoleName: unauthRoleName};",
                "            const res = await Promise.all([",
                "                iam.send(new UpdateAssumeRolePolicyCommand(authParams)),",
                "                iam.send(new UpdateAssumeRolePolicyCommand(unauthParams))",
                "            ]);",
                "            response.send(event, context, response.SUCCESS, {});",
                "        }",
                "    } catch (err) {",
                "        console.log(err.stack);",
                "        response.send(event, context, response.FAILED, {Error: err});",
                "    }",
                "};"
              ]
            ]
          }
        },
        "Handler": "index.handler",
        "Runtime": "nodejs18.x",
        "Timeout": 300,
        "Role": {
          "Fn::GetAtt": [
            "UpdateRolesWithIDPFunctionRole",
            "Arn"
          ]
        }
      }
    },
    "UpdateRolesWithIDPFunctionOutputs": {
      "Type": "Custom::LambdaCallout",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "UpdateRolesWithIDPFunction",
            "Arn"
          ]
        },
        "region": {
          "Ref": "AWS::Region"
        },
        "idpId": {
          "Fn::GetAtt": [
            "authsjwebauthntest483c852a",
            "Outputs.IdentityPoolId"
          ]
        },
        "authRoleName": {
          "Ref": "AuthRole"
        },
        "unauthRoleName": {
          "Ref": "UnauthRole"
        }
      }
    },
    "UpdateRolesWithIDPFunctionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AuthRole"
              },
              "-idp"
            ]
          ]
        },
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "UpdateRolesWithIDPFunctionPolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Resource": "arn:aws:logs:*:*:*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "iam:UpdateAssumeRolePolicy",
                    "iam:GetRole"
                  ],
                  "Resource": {
                    "Fn::GetAtt": [
                      "AuthRole",
                      "Arn"
                    ]
                  }
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "iam:UpdateAssumeRolePolicy",
                    "iam:GetRole"
                  ],
                  "Resource": {
                    "Fn::GetAtt": [
                      "UnauthRole",
                      "Arn"
                    ]
                  }
                }
              ]
            }
          }
        ]
      }
    }
  }
}